html
html
    head
        title BINANCE SPOT TRADING BOT
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js" integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js")
        meta(name="viewport", content="width=device-width, initial-scale=1")
        style
            include style.css

    body
        div(id="app", class="container-fluid")
            nav(class="p-2 navbar fixed-top navbar-light bg-light")
                h2 INSTANCE: #{data.INSTANCE_NAME}
                form(action = "/start", method = "POST")
                    div(class="input-group")
                        input(name = "action", type="hidden", value =`START`)
                        input(name = "pin", type="password", class="form-control")
                        button(type = "submit", class="btn btn-success") START

                form(action = "/stop", method = "POST")
                    div(class="input-group")
                        input(name = "action", type="hidden", value =`STOP`)
                        input(name = "pin", type="password", class="form-control")
                        button(type = "submit", class="btn btn-danger") STOP
            div.sidebar
                ul(class="col-md list-group list-group-flush", id="balances" v-for="asset in balances")
                    li.text-center.text-primary 
                        h5 {{ asset.asset }}
                    li.text-center {{ asset.free }}
                    li.text-center {{ asset.locked }}
                    li.text-center.text-success {{ (parseFloat(asset.free)+ parseFloat(asset.locked)).toFixed(8) }}
                
            div(class="container-fluid pt-5 mg_bottom")
                div(class="row")
                    div(class="col-md-10 mt-5 chart-container")
                        canvas(id="chart")
                    div(class="col-md-2 mt-5 sidebar-portfolio", id="settings")
                        label(for = "market") Markets:
                        div(class="accordion" id="accordionMarkets")
                            div(class="accordion-item", v-for="p in markets")
                                h2(class="accordion-header" :id="'heading-market-' + p.pairName")
                                    button(class="accordion-button" type="button" data-bs-toggle="collapse" :data-bs-target="'#collapse-market-'+ p.pairName" aria-expanded="true" :aria-controls="'collapse-market-'+ p.pairName") {{ p.pairName }}
                                        span(class="badge bg-secondary" v-if="!p.tradeEnabled && !p.monitorEnabled") disabled
                                        span(class="badge bg-success" v-if="p.tradeEnabled") Running
                                        span(class="badge bg-info" v-if="p.monitorEnabled && !p.tradeEnabled") Monitoring
                                        h6(v-if="prices[p.pairName]" v-bind:class="{'text-success': prices[p.pairName].price > prices[p.pairName].lastPrice,'text-danger':prices[p.pairName].price < prices[p.pairName].lastPrice}") {{ prices[p.pairName].price }}
                                div(:id="'collapse-market-'+ p.pairName" class="accordion-collapse collapse show" :aria-labelledby="'heading-market-' +p.pairName" data-bs-parent="#accordionMarkets")
                                    div(class="accordion-body")
                                        h6(v-if="prices[p.pairName]") 
                                            span Price: 
                                            span(v-bind:class="{'text-success': prices[p.pairName].price > prices[p.pairName].lastPrice,'text-danger':prices[p.pairName].price < prices[p.pairName].lastPrice}") {{ prices[p.pairName].price }}
                                            h6(v-if="latestOrders[p.pairName]" v-bind:class="{'text-success': latestOrders[p.pairName].side == 'BUY','text-danger': latestOrders[p.pairName].side == 'SELL'}") {{latestOrders[p.pairName].side }} :{{ latestOrders[p.pairName].price }}
                                            br
                                            br
                                            button.btn(type="button" v-bind:class="{'btn-success': p.tradeEnabled}") Enabled 
                                            button.btn(type="button" v-bind:class="{'btn-danger': !p.tradeEnabled}") Disabled
                        div(class="accordion" id="globalSettings")
                            div(class="accordion-item")
                                h2(class="accordion-header" id="heading-global-settings") 
                                    button(class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-global-settings" aria-expanded="true" aria-controls="collapse-global-settings") Global Settings
                                div(id="collapse-global-settings" class="accordion-collapse collapse show" aria-labelledby="heading-global-settings" data-bs-parent="#globalSettings")
                                    div(class="accordion-body")
                                        form(action = "/", method = "POST")
                                            div
                                                label(for = "interval_value") INTERVAL:
                                                input(name = "interval_value", value = `${data.INTERVAL}`, class="form-control")
                                            br
                                        
                                            div
                                                label(for = "room") WIGGLE_ROOM:
                                                input(name = "room", step="any", value = `${data.WIGGLE_ROOM}`, type="number", class="form-control")
                                            br
                                            div
                                                label(for = "asset_pct") ASSET_PERCENT:
                                                input(name = "asset_pct", step="any", value = `${data.ASSET_PERCENT}`, type="number", class="form-control")
                                            br
                                            div
                                                label(for = "fiat_or_quote_pct") FIAT_OR_QUOTE_PERCENT:
                                                input(name = "fiat_or_quote_pct", step="any", value = `${data.FIAT_OR_QUOTE_PERCENT}`, type="number", class="form-control")
                                            br
                                            div
                                                label(for = "after") CANCEL_AFTER:
                                                input(name = "after", value = `${data.CANCEL_AFTER}`, type="number", class="form-control")
                                            br
                                            div
                                                label(for = "instance") INSTANCE_NAME:
                                                input(name = "instance", value = `${data.INSTANCE_NAME}`, class="form-control")
                                            br
                                            div
                                                label(for = "divider") BUYING_PRICE_DIVIDER:
                                                input(name = "divider", value = `${data.BUYING_PRICE_DIVIDER}`, class="form-control")
                                            br
                                            div(class="form-group")
                                                label(for = "pin") PIN:
                                                input(name = "pin", type="password", class="form-control")
                                            br
                                            button(type = "submit", class="btn btn-primary btn-lg col-12") SAVE
                                
            div(class="card text-center fixed-bottom")
                div(class="card-header") Updates
                ul(class="list-group list-group-flush")
                    li(class="list-group-item", v-if="latestOrder.side !=''", id="box") Latest Order: | {{latestOrder.origQty}}@{{latestOrder.price}} | {{latestOrder.side}} | {{latestOrder.status}}
                    li(class="list-group-item", id="ticker") 
                        marquee
                            span(v-for="p in markets") {{p.pairName}}:   
                                span(v-if="prices[p.pairName]" v-bind:class="{'text-success': prices[p.pairName].price > prices[p.pairName].lastPrice,'text-danger':prices[p.pairName].price < prices[p.pairName].lastPrice}") {{ prices[p.pairName].price }}
                                
                    
        script(src="/socket.io/socket.io.js")
        script(src="https://cdn.jsdelivr.net/npm/chart.js@3.0.2/dist/chart.min.js")
        script(src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js")
        script
            include app.js 

